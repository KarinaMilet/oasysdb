syntax = "proto3";
package database;

import "google/protobuf/empty.proto";

// OasysDB gRPC service definition.
service Database {
    // Check if the connection to the database is alive.
    rpc Heartbeat(google.protobuf.Empty) returns (HeartbeatResponse);

    // Manually create a snapshot of the database.
    rpc Snapshot(google.protobuf.Empty) returns (SnapshotResponse);

    // Insert a new record into the database.
    rpc Insert(InsertRequest) returns (InsertResponse);

    // Retrieve an existing record from the database.
    rpc Get(GetRequest) returns (GetResponse);

    // Delete a record from the database.
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty);

    // Update a record metadata in the database.
    rpc Update(UpdateRequest) returns (google.protobuf.Empty);

    // Query the database for nearest neighbors.
    rpc Query(QueryRequest) returns (QueryResponse);
}

message HeartbeatResponse {
    string version = 1;
}

message SnapshotResponse {
    int32 count = 1;
}

message InsertRequest {
    Record record = 1;
}

message InsertResponse {
    string id = 1;
}

message GetRequest {
    string id = 1;
}

message GetResponse {
    Record record = 1;
}

message DeleteRequest {
    string id = 1;
}

message UpdateRequest {
    string id = 1;
    map<string, Value> metadata = 2;
}

message QueryRequest {
    Vector vector = 1;
    int32 k = 2;
    string filter = 3;
    QueryParameters params = 4;
}

message QueryParameters {
    int32 probes = 1;
    float radius = 2;
}

message QueryResponse {
    repeated QueryResult results = 1;
}

message QueryResult {
    string id = 1;
    map<string, Value> metadata = 2;
    float distance = 3;
}

// List shared types below.

message Record {
    Vector vector = 1;
    map<string, Value> metadata = 2;
}

message Vector {
    repeated float data = 1;
}

message Value {
    oneof value {
        string text = 1;
        double number = 2;
        bool boolean = 4;
    }
}
